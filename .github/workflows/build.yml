name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt-get update
          sudo apt-get install -y python3.12 python3.12-venv openjdk-17-jdk unzip wget

      - name: Create virtual environment and install dependencies
        run: |
          python3.12 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip wheel setuptools
          pip install buildozer==1.7.1 Cython==0.29.33

      - name: Initialize buildozer.spec file
        run: |
          source venv/bin/activate
          buildozer init

      - name: Check and create swap file
        run: |
          if swapon --show | grep -q '/swapfile'; then
            sudo swapoff /swapfile
            sudo rm -f /swapfile
          fi
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          echo "SWAPFILE=/swapfile" >> $GITHUB_ENV

      - name: Install Android SDK and accept licenses
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
          export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH
          which sdkmanager || { echo "❌ sdkmanager not found"; exit 1; }
          yes | sdkmanager --licenses || true
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;35.0.0"
          AIDL_PATH="$HOME/android-sdk/build-tools/35.0.0/aidl"
          if [ ! -f "$AIDL_PATH" ]; then
            echo "❌ aidl not found, trying to install older version"
            sdkmanager "build-tools;30.0.3"
          fi

      - name: Build APK
        run: |
          source venv/bin/activate
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: AutoRegBot-APK
          path: bin/*.apk
